#!/usr/bin/env node

var request = require('request');
var fs = require('fs');
var _ = require('lodash');
	
var fontsCode = process.argv[2]; //Ubuntu:400,300
var dstPath = process.argv[3] || "./";
if (dstPath[dstPath.length - 1] !== "/")  dstPath += "/";
var t = fontsCode.split(':');
var fontName = t[0];
var fontVersions = t[1].split(',');
var fontSubset = t[2];

var googleFontsUrl = "http://fonts.googleapis.com/css?family=" + t[0] + ":" + t[1];
if (fontSubset != null) { googleFontsUrl += "&subset=" + fontSubset; }

var fontRegExp = /url\(([^\)]+)\)/gm;

var userAgentMap = [{
	extension: 'ttf',
	userAgent: '(none)'
}, {
	extension: 'woff',
	userAgent: 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:27.0) Gecko/20100101 Firefox/27.0'
}, {
	extension: 'eot',
	userAgent: 'Mozilla/4.0(compatible; MSIE 7.0b; Windows NT 6.0)'
}, {
	extension: 'svg',
	userAgent: 'Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10'
}];
var userAgentLength = userAgentMap.length;
var userAgentIndex = 0;

var downloadedFonts = [];
(function requestFonts() {
	if(userAgentIndex == userAgentLength) return;
	var data = userAgentMap[userAgentIndex];
	var options = {
	    url: googleFontsUrl,
	    headers: {
	        'User-Agent': data.userAgent
	    }
	};
	console.log("Requesting CSS", options.url, options.headers['User-Agent']);
	request(options, function (error, response, body) {
	  if (!error && response.statusCode == 200) {
	   	var matches, fontUrls = [];
	    while(matches = fontRegExp.exec(body)) fontUrls.push(matches[1]);

	    
	    var fontLength = fontUrls.length;
	    console.log("Found " + fontLength + " fonts: ");
	    var currentFont = 0;
	    (function requestFont() {
	    	if(currentFont == fontLength) {
	    		userAgentIndex++;
				requestFonts();
				return;
	    	}
	    	if(_.contains(downloadedFonts, fontUrls[currentFont])) {
	    		console.log(fontUrls[currentFont], "already downloaded");
	    		currentFont++;
				requestFont();
	    	} else {
		    	var filename = fontName.toLowerCase() + "-" + fontVersions[currentFont] + "." + data.extension;
				var r = request(fontUrls[currentFont]).pipe(fs.createWriteStream(dstPath + filename));
				r.on('close', function() {
					//console.log("File : " + filename + " created with success!");
					downloadedFonts.push(fontUrls[currentFont]);
					currentFont++;
					requestFont();
				});
			}
	    })();
	  } else console.log("INVALID FONT");
	});
})();


